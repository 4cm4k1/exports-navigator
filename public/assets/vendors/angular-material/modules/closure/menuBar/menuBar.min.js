/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.0-rc.5-master-c447c12
 */
function MenuBarController(e,t,n,r,o,i,a,l)***REMOVED***this.$element=n,this.$attrs=r,this.$mdConstant=o,this.$mdUtil=a,this.$document=i,this.$scope=e,this.$rootScope=t,this.$timeout=l;var u=this;angular.forEach(BOUND_MENU_METHODS,function(e)***REMOVED***u[e]=angular.bind(u,u[e])***REMOVED***)***REMOVED***function MenuBarDirective(e,t)***REMOVED***return***REMOVED***restrict:"E",require:"mdMenuBar",controller:"MenuBarController",compile:function(n,r)***REMOVED***return r.ariaRole||n[0].setAttribute("role","menubar"),angular.forEach(n[0].children,function(t)***REMOVED***if("MD-MENU"==t.nodeName)***REMOVED***t.hasAttribute("md-position-mode")||(t.setAttribute("md-position-mode","left bottom"),t.querySelector("button, a, md-button").setAttribute("role","menuitem"));var n=e.nodesToArray(t.querySelectorAll("md-menu-content"));angular.forEach(n,function(e)***REMOVED***e.classList.add("md-menu-bar-menu"),e.classList.add("md-dense"),e.hasAttribute("width")||e.setAttribute("width",5)***REMOVED***)***REMOVED******REMOVED***),n.find("md-menu-item").addClass("md-in-menu-bar"),function(e,n,r,o)***REMOVED***n.addClass("_md"),t(e,n),o.init()***REMOVED******REMOVED******REMOVED******REMOVED***function MenuDividerDirective()***REMOVED***return***REMOVED***restrict:"E",compile:function(e,t)***REMOVED***t.role||e[0].setAttribute("role","separator")***REMOVED******REMOVED******REMOVED***function MenuItemController(e,t,n)***REMOVED***this.$element=t,this.$attrs=n,this.$scope=e***REMOVED***function MenuItemDirective(e)***REMOVED***return***REMOVED***controller:"MenuItemController",require:["mdMenuItem","?ngModel"],priority:210,compile:function(t,n)***REMOVED***function r(e,n,r)***REMOVED***r=r||t,r instanceof angular.element&&(r=r[0]),r.hasAttribute(e)||r.setAttribute(e,n)***REMOVED***function o(n)***REMOVED***var r=e.prefixer(n);angular.forEach(r,function(e)***REMOVED***if(t[0].hasAttribute(e))***REMOVED***var n=t[0].getAttribute(e);u[0].setAttribute(e,n),t[0].removeAttribute(e)***REMOVED******REMOVED***)***REMOVED***var i=n.type,a="md-in-menu-bar";if("checkbox"!=i&&"radio"!=i||!t.hasClass(a))r("role","menuitem",t[0].querySelector("md-button, button, a"));else***REMOVED***var l=t[0].textContent,u=angular.element('<md-button type="button"></md-button>');u.html(l),u.attr("tabindex","0"),t.html(""),t.append(angular.element('<md-icon md-svg-icon="check"></md-icon>')),t.append(u),t.addClass("md-indent").removeClass(a),r("role","checkbox"==i?"menuitemcheckbox":"menuitemradio",u),o("ng-disabled")***REMOVED***return function(e,t,n,r)***REMOVED***var o=r[0],i=r[1];o.init(i)***REMOVED******REMOVED******REMOVED******REMOVED***goog.provide("ngmaterial.components.menuBar"),goog.require("ngmaterial.components.menu"),goog.require("ngmaterial.core"),angular.module("material.components.menuBar",["material.core","material.components.menu"]),angular.module("material.components.menuBar").controller("MenuBarController",MenuBarController);var BOUND_MENU_METHODS=["handleKeyDown","handleMenuHover","scheduleOpenHoveredMenu","cancelScheduledOpen"];MenuBarController.$inject=["$scope","$rootScope","$element","$attrs","$mdConstant","$document","$mdUtil","$timeout"],MenuBarController.prototype.init=function()***REMOVED***var e=this.$element,t=this.$mdUtil,n=this.$scope,r=this,o=[];e.on("keydown",this.handleKeyDown),this.parentToolbar=t.getClosest(e,"MD-TOOLBAR"),o.push(this.$rootScope.$on("$mdMenuOpen",function(t,n)***REMOVED***r.getMenus().indexOf(n[0])!=-1&&(e[0].classList.add("md-open"),n[0].classList.add("md-open"),r.currentlyOpenMenu=n.controller("mdMenu"),r.currentlyOpenMenu.registerContainerProxy(r.handleKeyDown),r.enableOpenOnHover())***REMOVED***)),o.push(this.$rootScope.$on("$mdMenuClose",function(n,o,i)***REMOVED***var a=r.getMenus();if(a.indexOf(o[0])!=-1&&(e[0].classList.remove("md-open"),o[0].classList.remove("md-open")),e[0].contains(o[0]))***REMOVED***for(var l=o[0];l&&a.indexOf(l)==-1;)l=t.getClosest(l,"MD-MENU",!0);l&&(i.skipFocus||l.querySelector("button:not([disabled])").focus(),r.currentlyOpenMenu=void 0,r.disableOpenOnHover(),r.setKeyboardMode(!0))***REMOVED******REMOVED***)),n.$on("$destroy",function()***REMOVED***for(;o.length;)o.shift()()***REMOVED***),this.setKeyboardMode(!0)***REMOVED***,MenuBarController.prototype.setKeyboardMode=function(e)***REMOVED***e?this.$element[0].classList.add("md-keyboard-mode"):this.$element[0].classList.remove("md-keyboard-mode")***REMOVED***,MenuBarController.prototype.enableOpenOnHover=function()***REMOVED***if(!this.openOnHoverEnabled)***REMOVED***this.openOnHoverEnabled=!0;var e;(e=this.parentToolbar)&&(e.dataset.mdRestoreStyle=e.getAttribute("style"),e.style.position="relative",e.style.zIndex=100),angular.element(this.getMenus()).on("mouseenter",this.handleMenuHover)***REMOVED******REMOVED***,MenuBarController.prototype.handleMenuHover=function(e)***REMOVED***this.setKeyboardMode(!1),this.openOnHoverEnabled&&this.scheduleOpenHoveredMenu(e)***REMOVED***,MenuBarController.prototype.disableOpenOnHover=function()***REMOVED***if(this.openOnHoverEnabled)***REMOVED***this.openOnHoverEnabled=!1;var e;(e=this.parentToolbar)&&(e.style.cssText=e.dataset.mdRestoreStyle||""),angular.element(this.getMenus()).off("mouseenter",this.handleMenuHover)***REMOVED******REMOVED***,MenuBarController.prototype.scheduleOpenHoveredMenu=function(e)***REMOVED***var t=angular.element(e.currentTarget),n=t.controller("mdMenu");this.setKeyboardMode(!1),this.scheduleOpenMenu(n)***REMOVED***,MenuBarController.prototype.scheduleOpenMenu=function(e)***REMOVED***var t=this,n=this.$timeout;e!=t.currentlyOpenMenu&&(n.cancel(t.pendingMenuOpen),t.pendingMenuOpen=n(function()***REMOVED***t.pendingMenuOpen=void 0,t.currentlyOpenMenu&&t.currentlyOpenMenu.close(!0,***REMOVED***closeAll:!0***REMOVED***),e.open()***REMOVED***,200,!1))***REMOVED***,MenuBarController.prototype.handleKeyDown=function(e)***REMOVED***var t=this.$mdConstant.KEY_CODE,n=this.currentlyOpenMenu,r=n&&n.isOpen;this.setKeyboardMode(!0);var o,i,a;switch(e.keyCode)***REMOVED***case t.DOWN_ARROW:n?n.focusMenuContainer():this.openFocusedMenu(),o=!0;break;case t.UP_ARROW:n&&n.close(),o=!0;break;case t.LEFT_ARROW:i=this.focusMenu(-1),r&&(a=angular.element(i).controller("mdMenu"),this.scheduleOpenMenu(a)),o=!0;break;case t.RIGHT_ARROW:i=this.focusMenu(1),r&&(a=angular.element(i).controller("mdMenu"),this.scheduleOpenMenu(a)),o=!0***REMOVED***o&&(e&&e.preventDefault&&e.preventDefault(),e&&e.stopImmediatePropagation&&e.stopImmediatePropagation())***REMOVED***,MenuBarController.prototype.focusMenu=function(e)***REMOVED***var t=this.getMenus(),n=this.getFocusedMenuIndex();n==-1&&(n=this.getOpenMenuIndex());var r=!1;if(n==-1?(n=0,r=!0):(e<0&&n>0||e>0&&n<t.length-e)&&(n+=e,r=!0),r)return t[n].querySelector("button").focus(),t[n]***REMOVED***,MenuBarController.prototype.openFocusedMenu=function()***REMOVED***var e=this.getFocusedMenu();e&&angular.element(e).controller("mdMenu").open()***REMOVED***,MenuBarController.prototype.getMenus=function()***REMOVED***var e=this.$element;return this.$mdUtil.nodesToArray(e[0].children).filter(function(e)***REMOVED***return"MD-MENU"==e.nodeName***REMOVED***)***REMOVED***,MenuBarController.prototype.getFocusedMenu=function()***REMOVED***return this.getMenus()[this.getFocusedMenuIndex()]***REMOVED***,MenuBarController.prototype.getFocusedMenuIndex=function()***REMOVED***var e=this.$mdUtil,t=e.getClosest(this.$document[0].activeElement,"MD-MENU");if(!t)return-1;var n=this.getMenus().indexOf(t);return n***REMOVED***,MenuBarController.prototype.getOpenMenuIndex=function()***REMOVED***for(var e=this.getMenus(),t=0;t<e.length;++t)if(e[t].classList.contains("md-open"))return t;return-1***REMOVED***,angular.module("material.components.menuBar").directive("mdMenuBar",MenuBarDirective),MenuBarDirective.$inject=["$mdUtil","$mdTheming"],angular.module("material.components.menuBar").directive("mdMenuDivider",MenuDividerDirective),angular.module("material.components.menuBar").controller("MenuItemController",MenuItemController),MenuItemController.$inject=["$scope","$element","$attrs"],MenuItemController.prototype.init=function(e)***REMOVED***var t=this.$element,n=this.$attrs;this.ngModel=e,"checkbox"!=n.type&&"radio"!=n.type||(this.mode=n.type,this.iconEl=t[0].children[0],this.buttonEl=t[0].children[1],e&&this.initClickListeners())***REMOVED***,MenuItemController.prototype.clearNgAria=function()***REMOVED***var e=this.$element[0],t=["role","tabindex","aria-invalid","aria-checked"];angular.forEach(t,function(t)***REMOVED***e.removeAttribute(t)***REMOVED***)***REMOVED***,MenuItemController.prototype.initClickListeners=function()***REMOVED***function e()***REMOVED***if("radio"==a)***REMOVED***var e=i.ngValue?o.$eval(i.ngValue):i.value;return r.$modelValue==e***REMOVED***return r.$modelValue***REMOVED***function t(e)***REMOVED***e?u.off("click",s):u.on("click",s)***REMOVED***var n=this,r=this.ngModel,o=this.$scope,i=this.$attrs,a=(this.$element,this.mode);this.handleClick=angular.bind(this,this.handleClick);var l=this.iconEl,u=angular.element(this.buttonEl),s=this.handleClick;i.$observe("disabled",t),t(i.disabled),r.$render=function()***REMOVED***n.clearNgAria(),e()?(l.style.display="",u.attr("aria-checked","true")):(l.style.display="none",u.attr("aria-checked","false"))***REMOVED***,o.$$postDigest(r.$render)***REMOVED***,MenuItemController.prototype.handleClick=function(e)***REMOVED***var t,n=this.mode,r=this.ngModel,o=this.$attrs;"checkbox"==n?t=!r.$modelValue:"radio"==n&&(t=o.ngValue?this.$scope.$eval(o.ngValue):o.value),r.$setViewValue(t),r.$render()***REMOVED***,angular.module("material.components.menuBar").directive("mdMenuItem",MenuItemDirective),MenuItemDirective.$inject=["$mdUtil"],ngmaterial.components.menuBar=angular.module("material.components.menuBar");
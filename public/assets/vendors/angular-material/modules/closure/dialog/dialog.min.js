/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.0-rc.5-master-c447c12
 */
function MdDialogDirective(e,t,n)***REMOVED***return***REMOVED***restrict:"E",link:function(o,i)***REMOVED***i.addClass("_md"),t(i),e(function()***REMOVED***function e()***REMOVED***i.toggleClass("md-content-overflow",a.scrollHeight>a.clientHeight)***REMOVED***var t,a=i[0].querySelector("md-dialog-content");a&&(t=a.getElementsByTagName("img"),e(),angular.element(t).on("load",e)),o.$on("$destroy",function()***REMOVED***n.destroy(i)***REMOVED***)***REMOVED***)***REMOVED******REMOVED******REMOVED***function MdDialogProvider(e)***REMOVED***function t(e,t)***REMOVED***return***REMOVED***template:['<md-dialog md-theme="***REMOVED******REMOVED*** dialog.theme ***REMOVED******REMOVED***" aria-label="***REMOVED******REMOVED*** dialog.ariaLabel ***REMOVED******REMOVED***" ng-class="dialog.css">','  <md-dialog-content class="md-dialog-content" role="document" tabIndex="-1">','    <h2 class="md-title">***REMOVED******REMOVED*** dialog.title ***REMOVED******REMOVED***</h2>','    <div ng-if="::dialog.mdHtmlContent" class="md-dialog-content-body" ','        ng-bind-html="::dialog.mdHtmlContent"></div>','    <div ng-if="::!dialog.mdHtmlContent" class="md-dialog-content-body">',"      <p>***REMOVED******REMOVED***::dialog.mdTextContent***REMOVED******REMOVED***</p>","    </div>",'    <md-input-container md-no-float ng-if="::dialog.$type == \'prompt\'" class="md-prompt-input-container">','      <input ng-keypress="dialog.keypress($event)" md-autofocus ng-model="dialog.result"              placeholder="***REMOVED******REMOVED***::dialog.placeholder***REMOVED******REMOVED***">',"    </md-input-container>","  </md-dialog-content>","  <md-dialog-actions>",'    <md-button ng-if="dialog.$type === \'confirm\' || dialog.$type === \'prompt\'"               ng-click="dialog.abort()" class="md-primary">',"      ***REMOVED******REMOVED*** dialog.cancel ***REMOVED******REMOVED***","    </md-button>",'    <md-button ng-click="dialog.hide()" class="md-primary" md-autofocus="dialog.$type===\'alert\'">',"      ***REMOVED******REMOVED*** dialog.ok ***REMOVED******REMOVED***","    </md-button>","  </md-dialog-actions>","</md-dialog>"].join("").replace(/\s\s+/g,""),controller:function()***REMOVED***var n="prompt"==this.$type;n&&this.initialValue&&(this.result=this.initialValue),this.hide=function()***REMOVED***e.hide(!n||this.result)***REMOVED***,this.abort=function()***REMOVED***e.cancel()***REMOVED***,this.keypress=function(n)***REMOVED***n.keyCode===t.KEY_CODE.ENTER&&e.hide(this.result)***REMOVED******REMOVED***,controllerAs:"dialog",bindToController:!0***REMOVED******REMOVED***function n(e,t,n,a,r,l,d,s,c,m,u)***REMOVED***function g(e)***REMOVED***v(e)***REMOVED***function f(e,t,n,o)***REMOVED***if(o)***REMOVED***if(o.mdHtmlContent=o.htmlContent||n.htmlContent||"",o.mdTextContent=o.textContent||n.textContent||o.content||n.content||"",o.mdHtmlContent&&!m.has("$sanitize"))throw Error("The ngSanitize module must be loaded in order to use htmlContent.");if(o.mdHtmlContent&&o.mdTextContent)throw Error("md-dialog cannot have both `htmlContent` and `textContent`")***REMOVED******REMOVED***function p(e,t,o,i)***REMOVED***function a()***REMOVED***t[0].querySelector(".md-actions")&&c.warn("Using a class of md-actions is deprecated, please use <md-dialog-actions>.")***REMOVED***function r()***REMOVED***function e()***REMOVED***var e=t[0].querySelector(".dialog-close");if(!e)***REMOVED***var n=t[0].querySelectorAll(".md-actions button, md-dialog-actions button");e=n[n.length-1]***REMOVED***return angular.element(e)***REMOVED***if(o.focusOnOpen)***REMOVED***var i=n.findFocusTarget(t)||e();i.focus()***REMOVED******REMOVED***if(angular.element(l[0].body).addClass("md-dialog-is-showing"),o.contentElement)***REMOVED***var d=o.contentElement;angular.isString(d)?(d=document.querySelector(d),o.elementInsertionSibling=d.nextElementSibling,o.elementInsertionParent=d.parentNode):(d=d[0]||d,document.contains(d)&&(o.elementInsertionSibling=d.nextElementSibling,o.elementInsertionParent=d.parentNode)),o.elementInsertionEntry=d,t=angular.element(d)***REMOVED***var s=t.find("md-dialog");if(s.hasClass("ng-cloak"))***REMOVED***var m="$mdDialog: using `<md-dialog ng-cloak >` will affect the dialog opening animations.";c.warn(m,t[0])***REMOVED***return C(o),k(s,o),y(e,t,o),b(t,o),S(t,o).then(function()***REMOVED***$(t,o),a(),r()***REMOVED***)***REMOVED***function h(e,t,n)***REMOVED***function a()***REMOVED***return T(t,n)***REMOVED***function r()***REMOVED***n.contentElement&&(n.reverseContainerStretch(),n.elementInsertionParent?n.elementInsertionSibling?n.elementInsertionParent.insertBefore(n.elementInsertionEntry,n.elementInsertionSibling):n.elementInsertionParent.appendChild(n.elementInsertionEntry):n.elementInsertionEntry.parentNode.removeChild(n.elementInsertionEntry))***REMOVED***function d()***REMOVED***angular.element(l[0].body).removeClass("md-dialog-is-showing"),n.contentElement?r():t.remove(),n.$destroy||n.origin.focus()***REMOVED***return n.deactivateListeners(),n.unlockScreenReader(),n.hideBackdrop(n.$destroy),o&&o.parentNode&&o.parentNode.removeChild(o),i&&i.parentNode&&i.parentNode.removeChild(i),n.$destroy?d():a().then(d)***REMOVED***function v(e)***REMOVED***if(!e.theme&&(e.theme=u.defaultTheme(),e.targetEvent&&e.targetEvent.target))***REMOVED***var t=angular.element(e.targetEvent.target);e.theme=(t.controller("mdTheme")||***REMOVED******REMOVED***).$mdTheme||e.theme***REMOVED******REMOVED***function C(e)***REMOVED***function t(e,t)***REMOVED***var n=angular.element(e||***REMOVED******REMOVED***);if(n&&n.length)***REMOVED***var o=***REMOVED***top:0,left:0,height:0,width:0***REMOVED***,i=angular.isFunction(n[0].getBoundingClientRect);return angular.extend(t||***REMOVED******REMOVED***,***REMOVED***element:i?n:void 0,bounds:i?n[0].getBoundingClientRect():angular.extend(***REMOVED******REMOVED***,o,n[0]),focus:angular.bind(n,n.focus)***REMOVED***)***REMOVED******REMOVED***function n(e,t)***REMOVED***return angular.isString(e)&&(e=l[0].querySelector(e)),angular.element(e||t)***REMOVED***e.origin=angular.extend(***REMOVED***element:null,bounds:null,focus:angular.noop***REMOVED***,e.origin||***REMOVED******REMOVED***),e.parent=n(e.parent,s),e.closeTo=t(n(e.closeTo)),e.openFrom=t(n(e.openFrom)),e.targetEvent&&(e.origin=t(e.targetEvent.target,e.origin))***REMOVED***function b(t,o)***REMOVED***var i=angular.element(d),r=n.debounce(function()***REMOVED***E(t,o)***REMOVED***,60),l=[],s=function()***REMOVED***var t="alert"==o.$type?e.hide:e.cancel;n.nextTick(t,!0)***REMOVED***;if(o.escapeToClose)***REMOVED***var c=o.parent,m=function(e)***REMOVED***e.keyCode===a.KEY_CODE.ESCAPE&&(e.stopPropagation(),e.preventDefault(),s())***REMOVED***;t.on("keydown",m),c.on("keydown",m),l.push(function()***REMOVED***t.off("keydown",m),c.off("keydown",m)***REMOVED***)***REMOVED***if(i.on("resize",r),l.push(function()***REMOVED***i.off("resize",r)***REMOVED***),o.clickOutsideToClose)***REMOVED***var u,g=t,f=function(e)***REMOVED***u=e.target***REMOVED***,p=function(e)***REMOVED***u===g[0]&&e.target===g[0]&&(e.stopPropagation(),e.preventDefault(),s())***REMOVED***;g.on("mousedown",f),g.on("mouseup",p),l.push(function()***REMOVED***g.off("mousedown",f),g.off("mouseup",p)***REMOVED***)***REMOVED***o.deactivateListeners=function()***REMOVED***l.forEach(function(e)***REMOVED***e()***REMOVED***),o.deactivateListeners=null***REMOVED******REMOVED***function y(e,t,o)***REMOVED***o.disableParentScroll&&(o.restoreScroll=n.disableScrollAround(t,o.parent)),o.hasBackdrop&&(o.backdrop=n.createBackdrop(e,"md-dialog-backdrop md-opaque"),r.enter(o.backdrop,o.parent)),o.hideBackdrop=function(e)***REMOVED***o.backdrop&&(e?o.backdrop.remove():r.leave(o.backdrop)),o.disableParentScroll&&(o.restoreScroll(),delete o.restoreScroll),o.hideBackdrop=null***REMOVED******REMOVED***function k(e,a)***REMOVED***var r="alert"===a.$type?"alertdialog":"dialog",l=e.find("md-dialog-content"),d=e.attr("id"),s="dialogContent_"+(d||n.nextUid());e.attr(***REMOVED***role:r,tabIndex:"-1"***REMOVED***),0===l.length&&(l=e,d&&(s=d)),l.attr("id",s),e.attr("aria-describedby",s),a.ariaLabel?t.expect(e,"aria-label",a.ariaLabel):t.expectAsync(e,"aria-label",function()***REMOVED***var e=l.text().split(/\s+/);return e.length>3&&(e=e.slice(0,3).concat("...")),e.join(" ")***REMOVED***),o=document.createElement("div"),o.classList.add("md-dialog-focus-trap"),o.tabIndex=0,i=o.cloneNode(!1);var c=function()***REMOVED***e.focus()***REMOVED***;o.addEventListener("focus",c),i.addEventListener("focus",c),e[0].parentNode.insertBefore(o,e[0]),e.after(i)***REMOVED***function $(e,t)***REMOVED***function n(e)***REMOVED***for(;e.parentNode;)***REMOVED***if(e===document.body)return;for(var t=e.parentNode.children,i=0;i<t.length;i++)e===t[i]||x(t[i],["SCRIPT","STYLE"])||t[i].setAttribute("aria-hidden",o);n(e=e.parentNode)***REMOVED******REMOVED***var o=!0;n(e[0]),t.unlockScreenReader=function()***REMOVED***o=!1,n(e[0]),t.unlockScreenReader=null***REMOVED******REMOVED***function E(e,t)***REMOVED***var o="fixed"==d.getComputedStyle(l[0].body).position,i=t.backdrop?d.getComputedStyle(t.backdrop[0]):null,a=i?Math.min(l[0].body.clientHeight,Math.ceil(Math.abs(parseInt(i.height,10)))):0,r=***REMOVED***top:e.css("top"),height:e.css("height")***REMOVED***;return e.css(***REMOVED***top:(o?n.scrollTop(t.parent):0)+"px",height:a?a+"px":"100%"***REMOVED***),function()***REMOVED***e.css(r)***REMOVED******REMOVED***function S(e,t)***REMOVED***t.parent.append(e),t.reverseContainerStretch=E(e,t);var o=e.find("md-dialog"),i=n.dom.animator,a=i.calculateZoomToOrigin,r=***REMOVED***transitionInClass:"md-transition-in",transitionOutClass:"md-transition-out"***REMOVED***,l=i.toTransformCss(a(o,t.openFrom||t.origin)),d=i.toTransformCss("");return t.fullscreen&&o.addClass("md-dialog-fullscreen"),i.translate3d(o,l,d,r).then(function(e)***REMOVED***return t.reverseAnimate=function()***REMOVED***return delete t.reverseAnimate,t.closeTo?(r=***REMOVED***transitionInClass:"md-transition-out",transitionOutClass:"md-transition-in"***REMOVED***,l=d,d=i.toTransformCss(a(o,t.closeTo)),i.translate3d(o,l,d,r)):e(d=i.toTransformCss(a(o,t.origin)))***REMOVED***,t.clearAnimate=function()***REMOVED***return delete t.clearAnimate,i.translate3d(o,d,i.toTransformCss(""),***REMOVED******REMOVED***)***REMOVED***,!0***REMOVED***)***REMOVED***function T(e,t)***REMOVED***return t.reverseAnimate().then(function()***REMOVED***t.contentElement&&t.clearAnimate()***REMOVED***)***REMOVED***function x(e,t)***REMOVED***if(t.indexOf(e.nodeName)!==-1)return!0***REMOVED***return***REMOVED***hasBackdrop:!0,isolateScope:!0,onCompiling:g,onShow:p,onShowing:f,onRemove:h,clickOutsideToClose:!1,escapeToClose:!0,targetEvent:null,contentElement:null,closeTo:null,openFrom:null,focusOnOpen:!0,disableParentScroll:!0,autoWrap:!0,fullscreen:!1,transformTemplate:function(e,t)***REMOVED***function n(e)***REMOVED***return t.autoWrap&&!/<\/md-dialog>/g.test(e)?"<md-dialog>"+(e||"")+"</md-dialog>":e||""***REMOVED***return'<div class="md-dialog-container" tabindex="-1">'+n(e)+"</div>"***REMOVED******REMOVED******REMOVED***var o,i;return t.$inject=["$mdDialog","$mdConstant"],n.$inject=["$mdDialog","$mdAria","$mdUtil","$mdConstant","$animate","$document","$window","$rootElement","$log","$injector","$mdTheming"],e("$mdDialog").setDefaults(***REMOVED***methods:["disableParentScroll","hasBackdrop","clickOutsideToClose","escapeToClose","targetEvent","closeTo","openFrom","parent","fullscreen","contentElement"],options:n***REMOVED***).addPreset("alert",***REMOVED***methods:["title","htmlContent","textContent","content","ariaLabel","ok","theme","css"],options:t***REMOVED***).addPreset("confirm",***REMOVED***methods:["title","htmlContent","textContent","content","ariaLabel","ok","cancel","theme","css"],options:t***REMOVED***).addPreset("prompt",***REMOVED***methods:["title","htmlContent","textContent","initialValue","content","placeholder","ariaLabel","ok","cancel","theme","css"],options:t***REMOVED***)***REMOVED***goog.provide("ngmaterial.components.dialog"),goog.require("ngmaterial.components.backdrop"),goog.require("ngmaterial.core"),angular.module("material.components.dialog",["material.core","material.components.backdrop"]).directive("mdDialog",MdDialogDirective).provider("$mdDialog",MdDialogProvider),MdDialogDirective.$inject=["$$rAF","$mdTheming","$mdDialog"],MdDialogProvider.$inject=["$$interimElementProvider"],ngmaterial.components.dialog=angular.module("material.components.dialog");